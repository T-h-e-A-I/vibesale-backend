name: Dev Deployment

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  deploy:
    runs-on: [self-hosted]
    if: github.event.pull_request.merged == true || github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
        continue-on-error: true

      - name: Pull latest changes
        run: |
          git pull origin main || echo "Git pull failed, continuing..."
          git log --oneline -5 || echo "Git log failed, continuing..."
        continue-on-error: true

      - name: Create .env file
        run: |
          echo "PORT=2020" >> .env
          echo "ACCESS_TOKEN_SECRET='Ux7#pL3@qR8*vZ2!fY6^wN4&jH1'" >> .env
          echo "REFRESH_TOKEN_SECRET=\"Bx9\$tR2#eF7@mL5*cQ1!hG4^yP8&kS3\"" >> .env
          echo "DB_USER={{ secrets.DB_USER }}" >> .env
          echo "DB_HOST={{ secrets.DB_HOST }}" >> .env
          echo "DB_NAME={{ secrets.DB_NAME }}" >> .env
          echo "DB_PASSWORD={{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_PORT=5432" >> .env
        continue-on-error: true

      - name: Stop and remove existing containers
        run: |
          docker-compose down || echo "Docker-compose down failed, continuing..."
          docker system prune -f || echo "Docker system prune failed, continuing..."
        continue-on-error: true

      - name: Build and start Docker containers
        run: |
          docker-compose build --no-cache || echo "Docker build failed, continuing..."
          docker-compose up -d || echo "Docker-compose up failed, continuing..."
        continue-on-error: true

      - name: Wait for application to be ready
        run: |
          sleep 30
          curl -f http://localhost:2020/health || echo "Health check failed, continuing..."
        continue-on-error: true

      - name: Show running containers
        run: docker-compose ps || echo "Failed to show containers, continuing..."
        continue-on-error: true 